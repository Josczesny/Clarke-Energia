{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from 'react';\nconst initialFiltros = {\n  economiaMin: '',\n  custoMaximo: '',\n  certificacoes: [],\n  tipoEnergia: '',\n  avaliacaoMin: '',\n  clientesMin: ''\n};\nexport const useFiltrosAvancados = () => {\n  _s();\n  const [filtros, setFiltros] = useState(initialFiltros);\n  const [filtrosSalvos, setFiltrosSalvos] = useState([]);\n  useEffect(() => {\n    const savedFiltros = localStorage.getItem('filtros_salvos');\n    if (savedFiltros) {\n      setFiltrosSalvos(JSON.parse(savedFiltros));\n    }\n  }, []);\n  const handleChange = useCallback((campo, valor) => {\n    setFiltros(prev => ({\n      ...prev,\n      [campo]: valor\n    }));\n  }, []);\n  const salvarFiltro = useCallback(nome => {\n    if (!nome) return;\n    const novoFiltro = {\n      id: Date.now(),\n      nome,\n      filtros: {\n        ...filtros\n      },\n      dataCriacao: new Date().toISOString()\n    };\n    setFiltrosSalvos(prev => {\n      const novosFiltros = [...prev, novoFiltro];\n      localStorage.setItem('filtros_salvos', JSON.stringify(novosFiltros));\n      return novosFiltros;\n    });\n  }, [filtros]);\n  const limparFiltros = useCallback(() => {\n    setFiltros(initialFiltros);\n  }, []);\n  const aplicarFiltroSalvo = useCallback(filtroSalvo => {\n    setFiltros(filtroSalvo.filtros);\n  }, []);\n  const aplicarFiltros = useCallback(fornecedores => {\n    return fornecedores.filter(fornecedor => {\n      if (filtros.economiaMin && fornecedor.economia < Number(filtros.economiaMin)) {\n        return false;\n      }\n      if (filtros.custoMaximo && fornecedor.custoKwh > Number(filtros.custoMaximo)) {\n        return false;\n      }\n      if (filtros.certificacoes.length > 0 && !filtros.certificacoes.every(cert => fornecedor.certificacoes.includes(cert))) {\n        return false;\n      }\n      // ... outras validações\n      return true;\n    });\n  }, [filtros]);\n  return {\n    filtros,\n    filtrosSalvos,\n    handleChange,\n    salvarFiltro,\n    limparFiltros,\n    aplicarFiltroSalvo,\n    aplicarFiltros\n  };\n};\n_s(useFiltrosAvancados, \"cRUtOA0V+zgUL33+wVOhN0ylFt8=\");","map":{"version":3,"names":["useState","useCallback","useEffect","initialFiltros","economiaMin","custoMaximo","certificacoes","tipoEnergia","avaliacaoMin","clientesMin","useFiltrosAvancados","_s","filtros","setFiltros","filtrosSalvos","setFiltrosSalvos","savedFiltros","localStorage","getItem","JSON","parse","handleChange","campo","valor","prev","salvarFiltro","nome","novoFiltro","id","Date","now","dataCriacao","toISOString","novosFiltros","setItem","stringify","limparFiltros","aplicarFiltroSalvo","filtroSalvo","aplicarFiltros","fornecedores","filter","fornecedor","economia","Number","custoKwh","length","every","cert","includes"],"sources":["C:/Users/Jonas/Desktop/Clark/frontend/src/hooks/useFiltrosAvancados.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\r\n\r\nconst initialFiltros = {\r\n  economiaMin: '',\r\n  custoMaximo: '',\r\n  certificacoes: [],\r\n  tipoEnergia: '',\r\n  avaliacaoMin: '',\r\n  clientesMin: '',\r\n};\r\n\r\nexport const useFiltrosAvancados = () => {\r\n  const [filtros, setFiltros] = useState(initialFiltros);\r\n  const [filtrosSalvos, setFiltrosSalvos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const savedFiltros = localStorage.getItem('filtros_salvos');\r\n    if (savedFiltros) {\r\n      setFiltrosSalvos(JSON.parse(savedFiltros));\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = useCallback((campo, valor) => {\r\n    setFiltros(prev => ({\r\n      ...prev,\r\n      [campo]: valor\r\n    }));\r\n  }, []);\r\n\r\n  const salvarFiltro = useCallback((nome) => {\r\n    if (!nome) return;\r\n\r\n    const novoFiltro = {\r\n      id: Date.now(),\r\n      nome,\r\n      filtros: { ...filtros },\r\n      dataCriacao: new Date().toISOString()\r\n    };\r\n\r\n    setFiltrosSalvos(prev => {\r\n      const novosFiltros = [...prev, novoFiltro];\r\n      localStorage.setItem('filtros_salvos', JSON.stringify(novosFiltros));\r\n      return novosFiltros;\r\n    });\r\n  }, [filtros]);\r\n\r\n  const limparFiltros = useCallback(() => {\r\n    setFiltros(initialFiltros);\r\n  }, []);\r\n\r\n  const aplicarFiltroSalvo = useCallback((filtroSalvo) => {\r\n    setFiltros(filtroSalvo.filtros);\r\n  }, []);\r\n\r\n  const aplicarFiltros = useCallback((fornecedores) => {\r\n    return fornecedores.filter(fornecedor => {\r\n      if (filtros.economiaMin && fornecedor.economia < Number(filtros.economiaMin)) {\r\n        return false;\r\n      }\r\n      if (filtros.custoMaximo && fornecedor.custoKwh > Number(filtros.custoMaximo)) {\r\n        return false;\r\n      }\r\n      if (filtros.certificacoes.length > 0 && \r\n          !filtros.certificacoes.every(cert => fornecedor.certificacoes.includes(cert))) {\r\n        return false;\r\n      }\r\n      // ... outras validações\r\n      return true;\r\n    });\r\n  }, [filtros]);\r\n\r\n  return {\r\n    filtros,\r\n    filtrosSalvos,\r\n    handleChange,\r\n    salvarFiltro,\r\n    limparFiltros,\r\n    aplicarFiltroSalvo,\r\n    aplicarFiltros\r\n  };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}